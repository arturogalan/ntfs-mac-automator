<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>444.42</string>
	<key>AMApplicationVersion</key>
	<string>2.9</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>on replace_chars(this_text, search_string, replacement_string)	set AppleScript's text item delimiters to the search_string	set the item_list to every text item of this_text	set AppleScript's text item delimiters to the replacement_string	set this_text to the item_list as string	set AppleScript's text item delimiters to ""	return this_textend replace_charsset dmg to do shell script "ls /Volumes/ | sed -e 's#[[:space:]]*$##;s#/##;/^$/d'"set _Result to the paragraphs of dmgset n to 0set n to count _Resultset hdd to {}repeat with i from 1 to n	set end of hdd to item i of _Resultend repeatset messageTitle to "üßô‚Äç‚ôÇÔ∏è NTFS writable utility"set theVolumeTemp to (choose from list hdd with prompt "üßô‚Äç‚ôÇÔ∏è‚ú®Choose the Volume (partition) NTFS to make writable:‚ú®")if theVolumeTemp is not false then	try		set slash to do shell script "printf '\\\\\\'"		set spacing to do shell script "printf ' '"		set tempo to replace_chars(theVolumeTemp as string, spacing as string, slash &amp; slash &amp; "040" as string)		do shell script "grep " &amp; tempo &amp; " /etc/fstab"		display dialog "It seems that the disk is already included in fstab 
Click accept to open Volumes folder"		do shell script "open /Volumes"	on error errmsg number errnr		do shell script "echo " &amp; errnr		-- Volume label is not in fstab file, writing, unmounting/mounting and opening volumes folder to see it in writable mode		if errnr = 2 or errnr = 1 then
		set askMakeWritable to "‚ú®Do you want to make disc " &amp; tempo &amp; " writable?‚ú®"		set confirmationSubtitle to "Hahahaha üëπ"		set confirmationMessage to "Now you can write into " &amp; tempo &amp; " volume"			do shell script "echo LABEL=" &amp; tempo &amp; " none ntfs rw,auto,nobrowse &gt;&gt; /etc/fstab" with administrator privileges			do shell script "diskutil unmountDisk \"" &amp; theVolumeTemp &amp; "\""			do shell script "diskutil mountDisk \"" &amp; theVolumeTemp &amp; "\""			do shell script "open /Volumes"			display notification confirmationMessage with title messageTitle subtitle confirmationSubtitle		else			do shell script "echo 'error ocurred: '" &amp; errmsg &amp; " " &amp; errnr		end if			end tryend if</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>IgnoresInput</key>
				<true/>
				<key>InputUUID</key>
				<string>998DFA62-3AA7-4336-8F91-F5EDB542E5CC</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>912DC893-D1D9-4B06-BB02-E3A102ADFB66</string>
				<key>UUID</key>
				<string>07993F36-DEF9-4155-B21B-76460D16488A</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>529.000000:728.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>applicationBundleID</key>
		<string>com.apple.finder</string>
		<key>applicationBundleIDsByPath</key>
		<dict>
			<key>/System/Library/CoreServices/Finder.app</key>
			<string>com.apple.finder</string>
		</dict>
		<key>applicationPath</key>
		<string>/System/Library/CoreServices/Finder.app</string>
		<key>applicationPaths</key>
		<array>
			<string>/System/Library/CoreServices/Finder.app</string>
		</array>
		<key>inputTypeIdentifier</key>
		<string>com.apple.Automator.fileSystemObject.folder</string>
		<key>outputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>presentationMode</key>
		<integer>15</integer>
		<key>processesInput</key>
		<integer>0</integer>
		<key>serviceApplicationBundleID</key>
		<string>com.apple.finder</string>
		<key>serviceApplicationPath</key>
		<string>/System/Library/CoreServices/Finder.app</string>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.fileSystemObject.folder</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>systemImageName</key>
		<string>NSTouchBarAllMyFiles</string>
		<key>useAutomaticInputType</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
